data Tree a = N a [Tree a] -- polymorphic tree type

data Nat = Z
         | S Nat

data Lab = A [Char] [Char] -- Attribute
         | T [Char] -- Text
         | E [Char] -- Element
         | Na Nat

q4 :: Tree Lab -> Tree Lab
q4 t = let (N (E "book") ts) = t
       in N (E "top_section_count") [N (Na (q4_book ts)) []]

q4_book :: [Tree Lab] -> Nat
q4_book l = case l of
  [] -> Z
  N (E "section") xs:rest -> S (q4_book rest)
  node:rest -> q4_book rest
